export type SortOption = Record<string, 1 | -1> | {
    $vector: {
        $meta: Array<number>;
    };
} | {
    $vector: Array<number>;
};
export type ProjectionOption = Record<string, 1 | 0 | true | false | {
    $slice: number;
}>;
/**
 * deleteOneOptions
 */
export interface DeleteOneOptions {
    sort?: Record<string, 1 | -1>;
}
/**
 * findOptions
 */
export interface FindOptions {
    limit?: number;
    skip?: number;
    sort?: SortOption;
    projection?: ProjectionOption;
}
declare class _FindOptionsInternal {
    limit?: number;
    skip?: number;
    pagingState?: string;
}
export interface FindOptionsInternal extends _FindOptionsInternal {
}
export declare const findInternalOptionsKeys: Set<string>;
/**
 * findOneOptions
 */
export interface FindOneOptions {
    sort?: Record<string, 1 | -1>;
    projection?: ProjectionOption;
}
/**
 * findOneAndDeleteOptions
 */
export interface FindOneAndDeleteOptions {
    sort?: SortOption;
}
/**
 * findOneAndReplaceOptions
 */
declare class _FindOneAndReplaceOptions {
    upsert?: boolean;
    returnDocument?: 'before' | 'after';
    sort?: SortOption;
}
export interface FindOneAndReplaceOptions extends _FindOneAndReplaceOptions {
}
export declare const findOneAndReplaceInternalOptionsKeys: Set<string>;
/**
 * findOneAndUpdateOptions
 */
declare class _FindOneAndUpdateOptions {
    upsert?: boolean;
    returnDocument?: 'before' | 'after';
    sort?: SortOption;
}
export interface FindOneAndUpdateOptions extends _FindOneAndUpdateOptions {
}
export declare const findOneAndUpdateInternalOptionsKeys: Set<string>;
/**
 * insertManyOptions
 */
declare class _InsertManyOptions {
    ordered?: boolean;
}
export interface InsertManyOptions extends _InsertManyOptions {
}
export declare const insertManyInternalOptionsKeys: Set<string>;
/**
 * updateManyOptions
 */
declare class _UpdateManyOptions {
    upsert?: boolean;
}
export interface UpdateManyOptions extends _UpdateManyOptions {
}
export declare const updateManyInternalOptionsKeys: Set<string>;
/**
 * updateOneOptions
 */
declare class _UpdateOneOptions {
    upsert?: boolean;
    sort?: SortOption;
}
export interface UpdateOneOptions extends _UpdateOneOptions {
}
export declare const updateOneInternalOptionsKeys: Set<string>;
/**
 * CreateCollectionOptions
 */
declare class _CreateCollectionOptions {
    vector?: {
        size: number;
        function?: 'cosine' | 'euclidean' | 'dot_product';
    };
}
export interface CreateCollectionOptions extends _CreateCollectionOptions {
}
export declare const createCollectionOptionsKeys: Set<string>;
export {};
